{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.match.js","webpack:///./src/views/Login.vue?8d82","webpack:///./src/views/Login.vue","webpack:///./src/mock/login.js","webpack:///./src/views/Login.vue?e144","webpack:///./src/views/Login.vue?e63b"],"names":["fixRegExpWellKnownSymbolLogic","anObject","toLength","requireObjectCoercible","advanceStringIndex","regExpExec","MATCH","nativeMatch","maybeCallNative","regexp","O","this","matcher","undefined","call","RegExp","String","string","res","done","value","rx","S","global","fullUnicode","unicode","lastIndex","result","A","n","matchStr","class","title","type","center","show-icon","successMode","tip","ref","model","loginForm","rules","loginRules","label","prop","email","placeholder","pass","gutter","span","submitForm","resetForm","Mock","mock","req","body","JSON","parse","user","password","console","log","token","username","code","message","setup","router","loginFormRef","validatePass","rule","callback","reg","match","Error","required","trigger","min","max","validator","getTip","form","resetFields","goto","push","changeMode","mode","validate","render","__scopeId"],"mappings":"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","file":"js/chunk-80f96814.5fa2fb2f.js","sourcesContent":["'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.es/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = regexp == undefined ? undefined : regexp[MATCH];\n      return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n    function (string) {\n      var res = maybeCallNative(nativeMatch, this, string);\n      if (res.done) return res.value;\n\n      var rx = anObject(this);\n      var S = String(string);\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Login.vue?vue&type=style&index=0&id=8cfe7b54&lang=scss&scoped=true\"","<template>\r\n  <div class=\"container\">\r\n    <div class=\"sign-in\">\r\n      <el-alert\r\n          title=\"登录成功\"\r\n          type=\"success\"\r\n          v-show=\"successMode===1\"\r\n          center\r\n          show-icon\r\n          >\r\n        </el-alert>\r\n        <el-alert\r\n          :title=\"tip\"\r\n          type=\"error\"\r\n          v-show=\"successMode===2\"\r\n          center\r\n          show-icon\r\n          >\r\n        </el-alert>\r\n      <!-- 登录 -->\r\n      <el-form\r\n        class=\"form login-form clear-fix\"\r\n        ref=\"loginFormRef\"\r\n        :model=\"loginForm\"\r\n        :rules=\"loginRules\"\r\n      >\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"loginForm.email\" type=\"text\" placeholder=\"请输入邮箱地址\" ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"pass\">\r\n          <el-input v-model=\"loginForm.pass\" type=\"password\" placeholder=\"请输入密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-row gutter=\"10px\">\r\n            <el-col :span=\"12\">\r\n              <el-button\r\n                type=\"primary\"\r\n                class=\"form-btn submit-btn\"\r\n                @click=\"submitForm\"\r\n                >\r\n                提交\r\n              </el-button>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n              <el-button\r\n                class=\"form-btn reset-btn\"\r\n                @click=\"resetForm()\"\r\n                >\r\n                重置\r\n              </el-button>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n        <!-- 找回密码 -->\r\n        <div class=\"tiparea\">\r\n          <p>\r\n            忘记密码?\r\n            <el-link type=\"primary\">找回密码</el-link>\r\n          </p>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"sign-up\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { ref, defineComponent, reactive, unref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport '../mock/login.js'\r\nimport { login } from '../axios'\r\n\r\n// 对密码和邮箱进行类型限制\r\ninterface loginData {\r\n  email: string;\r\n  pass: string;\r\n}\r\n\r\nexport default defineComponent({\r\n  setup () {\r\n    const loginForm = ref<loginData>({\r\n      email: '',\r\n      pass: ''\r\n    })\r\n    const router = useRouter()\r\n    const loginFormRef = ref()\r\n    // 自定义验证规则\r\n    const validatePass = (rule, value, callback) => {\r\n      //  密码只能由大小写英文字母或数字开头，且由大小写英文字母_.组成\r\n      const reg = /^[A-Za-z0-9][A-Za-z0-9_.]{5,14}$/\r\n      if (!value.match(reg)) {\r\n        callback(new Error('密码由字母或数字开头，且只能为字母,数字,下划线及（.）'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    // 定义校验规则\r\n    const loginRules = reactive({\r\n      email: [\r\n        { required: true, message: '邮箱不能为空', trigger: 'blur' },\r\n        { type: 'email', message: '邮箱格式不正确', trigger: 'blur' }\r\n      ],\r\n      pass: [\r\n        { required: true, message: '密码不能为空', trigger: 'blur' },\r\n        { min: 6, max: 15, message: '密码位数只能在6~15之间', trigger: 'blur' },\r\n        { validator: validatePass, trigger: 'blur' }\r\n      ]\r\n    })\r\n    // 是否登录成功\r\n    const successMode = ref<0|1|2>(0)\r\n    // 失败提示\r\n    const tip = ref<string>('')\r\n    // 获取失败提示\r\n    const getTip = (message) => {\r\n      tip.value = message\r\n    }\r\n    // 重置表单\r\n    const resetForm = () => {\r\n      // 笨办法这么写：\r\n      // loginForm.value.email = ''\r\n      // loginForm.value.pass = ''\r\n      // 明眼人这么写：\r\n      const form = unref(loginFormRef)\r\n      form.resetFields()\r\n    }\r\n    // 路由跳转\r\n    const goto = () => {\r\n      router.push('/')\r\n    }\r\n    // 改变登录状态\r\n    const changeMode = (mode) => {\r\n      successMode.value = mode\r\n    }\r\n    // 表单提交\r\n    const submitForm = async () => {\r\n      const form = unref(loginFormRef)\r\n      if (!form) {\r\n        return\r\n      }\r\n      try {\r\n        await form.validate()\r\n        const { email, pass } = loginForm.value\r\n        login(email, pass, goto, changeMode, getTip)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    return {\r\n      loginFormRef,\r\n      loginForm,\r\n      loginRules,\r\n      resetForm,\r\n      submitForm,\r\n      successMode,\r\n      goto,\r\n      tip\r\n      // setCookies\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n.form {\r\n  width: 360px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n}\r\n\r\n.tiparea {\r\n  float: right;\r\n  a {\r\n    color: blue;\r\n    &:hover {\r\n      color: red;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n}\r\n\r\n.form {\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.clear-fix::after {\r\n  display: table;\r\n  content: \"\";\r\n  overflow: hidden;\r\n  clear: both;\r\n}\r\n\r\n.login-form {\r\n  box-shadow: 5px 5px 5px 5px darken(#145885, 0.1);\r\n}\r\n.form-btn {\r\n  width: 175px;\r\n}\r\n.reset-btn {\r\n  float: right;\r\n}\r\n.sign-in {\r\n  background: url('../assets/login.jpg') no-repeat;\r\n  background-size: cover;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n}\r\n.el-form {\r\n  position: absolute;\r\n  right: 200px;\r\n  top: 200px;\r\n  background-color: #fff;\r\n}\r\n</style>\r\n","import Mock from 'mockjs'\r\n\r\nMock.mock('/users', 'post', req => {\r\n  const body = JSON.parse(req.body)\r\n  const user = body.user\r\n  const email = user.email\r\n  const password = user.password\r\n  console.log('pwd', user)\r\n  const token = 'ef45ge13te145'\r\n  if (email === 'admin@admin.com' && password === '123456') {\r\n    console.log('登录成功')\r\n    user.username = 'admin'\r\n    delete user.password\r\n    return Mock.mock({\r\n      code: 200,\r\n      message: '登录成功',\r\n      token,\r\n      user\r\n    })\r\n  } else {\r\n    return {\r\n      code: 401,\r\n      message: '用户名和密码不正确'\r\n    }\r\n  }\r\n})\r\n","\r\nimport { ref, defineComponent, reactive, unref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport '../mock/login.js'\r\nimport { login } from '../axios'\r\n\r\n// 对密码和邮箱进行类型限制\r\ninterface loginData {\r\n  email: string;\r\n  pass: string;\r\n}\r\n\r\nexport default defineComponent({\r\n  setup () {\r\n    const loginForm = ref<loginData>({\r\n      email: '',\r\n      pass: ''\r\n    })\r\n    const router = useRouter()\r\n    const loginFormRef = ref()\r\n    // 自定义验证规则\r\n    const validatePass = (rule, value, callback) => {\r\n      //  密码只能由大小写英文字母或数字开头，且由大小写英文字母_.组成\r\n      const reg = /^[A-Za-z0-9][A-Za-z0-9_.]{5,14}$/\r\n      if (!value.match(reg)) {\r\n        callback(new Error('密码由字母或数字开头，且只能为字母,数字,下划线及（.）'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    // 定义校验规则\r\n    const loginRules = reactive({\r\n      email: [\r\n        { required: true, message: '邮箱不能为空', trigger: 'blur' },\r\n        { type: 'email', message: '邮箱格式不正确', trigger: 'blur' }\r\n      ],\r\n      pass: [\r\n        { required: true, message: '密码不能为空', trigger: 'blur' },\r\n        { min: 6, max: 15, message: '密码位数只能在6~15之间', trigger: 'blur' },\r\n        { validator: validatePass, trigger: 'blur' }\r\n      ]\r\n    })\r\n    // 是否登录成功\r\n    const successMode = ref<0|1|2>(0)\r\n    // 失败提示\r\n    const tip = ref<string>('')\r\n    // 获取失败提示\r\n    const getTip = (message) => {\r\n      tip.value = message\r\n    }\r\n    // 重置表单\r\n    const resetForm = () => {\r\n      // 笨办法这么写：\r\n      // loginForm.value.email = ''\r\n      // loginForm.value.pass = ''\r\n      // 明眼人这么写：\r\n      const form = unref(loginFormRef)\r\n      form.resetFields()\r\n    }\r\n    // 路由跳转\r\n    const goto = () => {\r\n      router.push('/')\r\n    }\r\n    // 改变登录状态\r\n    const changeMode = (mode) => {\r\n      successMode.value = mode\r\n    }\r\n    // 表单提交\r\n    const submitForm = async () => {\r\n      const form = unref(loginFormRef)\r\n      if (!form) {\r\n        return\r\n      }\r\n      try {\r\n        await form.validate()\r\n        const { email, pass } = loginForm.value\r\n        login(email, pass, goto, changeMode, getTip)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    return {\r\n      loginFormRef,\r\n      loginForm,\r\n      loginRules,\r\n      resetForm,\r\n      submitForm,\r\n      successMode,\r\n      goto,\r\n      tip\r\n      // setCookies\r\n    }\r\n  }\r\n})\r\n","import { render } from \"./Login.vue?vue&type=template&id=8cfe7b54&scoped=true\"\nimport script from \"./Login.vue?vue&type=script&lang=ts\"\nexport * from \"./Login.vue?vue&type=script&lang=ts\"\n\nimport \"./Login.vue?vue&type=style&index=0&id=8cfe7b54&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-8cfe7b54\"\n\nexport default script"],"sourceRoot":""}